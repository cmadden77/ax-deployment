{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "userImageStorageAccountName": {
      "type": "string",
      "defaultValue": "us4prodclientsarmaxvms",
      "metadata": {
        "description": "This is the name of the your storage account"
      }
    },

    "osDiskVhdUri": {
      "type": "string",
      "defaultValue": "https://us4prodclientsarmaxvms.blob.core.windows.net/images/images/SQL-US4-PROD-2015-11-17-os-2015-11-17.vhd",
      "metadata": {
        "description": "Uri of the your user image"
      }
    },
    "DataDisk0VhdUri": {
      "type": "string",
      "defaultValue": "https://us4prodclientsarmaxvms.blob.core.windows.net/images/images/SQL-US4-PROD-2015-11-17-datadisk-0-2015-11-17.vhd",
      "metadata": {
        "description": "Uri of the your user data disk 0 image"
      }
    },
    "dnsLabelPrefix": {
      "type": "string",
      "defaultValue": "axtesthioiop02",
      "metadata": {
        "description": "DNS Label for the Public IP. Must be lowercase. It should match with the following regular expression: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$ or it will raise an error."
      }
    },
    "adminUserName": {
      "type": "string",
      "metadata": {
        "description": "UserName for the Virtual Machine"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine"
      }
    },
    "osType": {
      "type": "string",
      "allowedValues": [
        "Windows",
        "Linux"
      ],
      "metadata": {
        "description": "This is the OS that your VM will be running"
      }
    },
    "sizeOfEachDataDiskInGB": {
      "defaultValue": "10",
      "type": "String",
      "metadata": {
        "description": "There will be 32 data disks created of this size and then striped. The total capacity will be 32x whatever you specify here"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_d14",
      "metadata": {
        "description": "This is the size of your VM"
      }
    },
    "modulesUrl": {
      "defaultValue": "https://github.com/Azure/azure-quickstart-templates/blob/master/301-vm-32-data-disks-high-iops/StoragePool.ps1.zip?raw=true",
      "type": "String",
      "metadata": {
        "description": "URL for the powershell script configuration module. "
      }
    },
    "CreateStorageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ]
    },
    "datacenterCode": {
      "type": "string",
      "defaultValue": "us4",
      "allowedValues": [
        "us1",
        "us2",
        "us3",
        "us4",
        "as1",
        "eu1",
        "eu2"
      ],
      "metadata": {
        "description": "Specify the Datacenter code"
      }
    },
    "envCode": {
      "type": "string",
      "defaultValue": "prod",
      "allowedValues": [
        "prod",
        "uat",
        "c1",
        "dev"
      ],
      "metadata": {
        "description": "Specify the environment code"
      }
    },

    "ClientCode": {
      "type": "string",
      "defaultValue": "xx",

      "metadata": {
        "description": "Specify the Client code"
      }
    },
    "ClientShortName": {
      "type": "string",
      "defaultValue": "test01",

      "metadata": {
        "description": "Specify the Client code"
      }
    },
    "currentDate": {
      "type": "string",
      "defaultValue": "16-04-13",

      "metadata": {
        "description": "current date in the format %Y-%m-%d"
      }
    },
      "_artifactsLocation": {
          "type": "string",
          "metadata": {
              "description": "Auto-generated container in staging storage account to receive post-build staging folder upload"
          }
      },
      "_artifactsLocationSasToken": {
          "type": "securestring",
          "metadata": {
              "description": "Auto-generated token to access _artifactsLocation"
          }
      }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "vmName": "[concat('AX-',parameters('ClientShortName'),'-DB-',parameters('clientcode'))]",
    "publicIPAddressName": "userImagePublicIP",
    "virtualNetworkName": "userImageVNET",
    "nicName": "userImageVMNic",
    "addressPrefix": "10.0.0.0/16",
    "subnet1Name": "Subnet-1",
    "subnet1Prefix": "10.0.0.0/24",
    "publicIPAddressType": "Dynamic",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnet1Ref": "[concat(variables('vnetID'),'/subnets/',variables('subnet1Name'))]",
    "osDiskVhdName": "[concat('http://',parameters('userImageStorageAccountName'),'.blob.core.windows.net/vhds/',variables('vmName'),parameters('currentdate'),'-OS.vhd')]",
    "DataDisk0VhdName": "[concat('http://',parameters('userImageStorageAccountName'),'.blob.core.windows.net/vhds/',variables('vmName'),parameters('currentdate'),'-DataDisk-0.vhd')]",
    "apiVersion": "2015-06-15",
    "configurationFunction": "StoragePool.ps1\\StoragePool",
    "DscExtensionName": "DscExtension",
    "dataDisk1VhdName": "[concat('http://',variables('CreateStorageAccountName'),'.blob.core.windows.net/vhds/',variables('vmName'),'dataDisk1.vhd')]",
    "dataDisk2VhdName": "[concat('http://',variables('CreateStorageAccountName'),'.blob.core.windows.net/vhds/',variables('vmName'),'dataDisk2.vhd')]",
    "dataDisk3VhdName": "[concat('http://',variables('CreateStorageAccountName'),'.blob.core.windows.net/vhds/',variables('vmName'),'dataDisk3.vhd')]",
    "dataDisk4VhdName": "[concat('http://',variables('CreateStorageAccountName'),'.blob.core.windows.net/vhds/',variables('vmName'),'dataDisk4.vhd')]",
    "dataDisk5VhdName": "[concat('http://',variables('CreateStorageAccountName'),'.blob.core.windows.net/vhds/',variables('vmName'),'dataDisk5.vhd')]",
    "dataDisk6VhdName": "[concat('http://',variables('CreateStorageAccountName'),'.blob.core.windows.net/vhds/',variables('vmName'),'dataDisk6.vhd')]",
    "dataDisk7VhdName": "[concat('http://',variables('CreateStorageAccountName'),'.blob.core.windows.net/vhds/',variables('vmName'),'dataDisk7.vhd')]",
    "dataDisk8VhdName": "[concat('http://',variables('CreateStorageAccountName'),'.blob.core.windows.net/vhds/',variables('vmName'),'dataDisk8.vhd')]",
    "dataDisk9VhdName": "[concat('http://',variables('CreateStorageAccountName'),'.blob.core.windows.net/vhds/',variables('vmName'),'dataDisk9.vhd')]",
    "dataDisk10VhdName": "[concat('http://',variables('CreateStorageAccountName'),'.blob.core.windows.net/vhds/',variables('vmName'),'dataDisk10.vhd')]",
    "dataDisk11VhdName": "[concat('http://',variables('CreateStorageAccountName'),'.blob.core.windows.net/vhds/',variables('vmName'),'dataDisk11.vhd')]",
    "dataDisk12VhdName": "[concat('http://',variables('CreateStorageAccountName'),'.blob.core.windows.net/vhds/',variables('vmName'),'dataDisk12.vhd')]",
    "dataDisk13VhdName": "[concat('http://',variables('CreateStorageAccountName'),'.blob.core.windows.net/vhds/',variables('vmName'),'dataDisk13.vhd')]",
    "dataDisk14VhdName": "[concat('http://',variables('CreateStorageAccountName'),'.blob.core.windows.net/vhds/',variables('vmName'),'dataDisk14.vhd')]",
    "CreateStorageAccountName": "[concat(parameters('datacenterCode'),parameters('envCode'),'axioma',parameters('ClientCode'),'arm')]"
  },
  "resources": [
    {
      "name": "[variables('CreateStorageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [ ],
      "tags": {
        "displayName": "CreateStorageAccount"
      },
      "properties": {
        "accountType": "[parameters('CreateStorageAccountType')]"
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsLabelPrefix')]"
        }
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet1Prefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnet1Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "osDisk": {
            "name": "[concat(variables('vmName'),'-osDisk')]",
            "osType": "[parameters('osType')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "image": {
              "uri": "[parameters('osDiskVhdUri')]"
            },
            "vhd": {
              "uri": "[variables('osDiskVhdName')]"
            }
          },
          "dataDisks": [
            {
              "lun": 0,
              "name": "[concat(variables('vmName'),'-DataDisk0')]",
              "createOption": "FromImage",
              "image": {
                "uri": "[parameters('DataDisk0VhdUri')]"
              },
              "vhd": {
                "Uri": "[variables('dataDisk0VhdName')]"
              },
              "caching": "None"
            },
            {
              "name": "datadisk1",
              "diskSizeGB": "[parameters('sizeOfEachDataDiskInGB')]",
              "lun": 1,
              "vhd": {
                "Uri": "[variables('dataDisk1VhdName')]"
              },
              "createOption": "Empty"
            },
            {
              "name": "datadisk2",
              "diskSizeGB": "[parameters('sizeOfEachDataDiskInGB')]",
              "lun": 2,
              "vhd": {
                "Uri": "[variables('dataDisk2VhdName')]"
              },
              "createOption": "Empty"
            },
            {
              "name": "datadisk3",
              "diskSizeGB": "[parameters('sizeOfEachDataDiskInGB')]",
              "lun": 3,
              "vhd": {
                "Uri": "[variables('dataDisk3VhdName')]"
              },
              "createOption": "Empty"
            },
            {
              "name": "datadisk4",
              "diskSizeGB": "[parameters('sizeOfEachDataDiskInGB')]",
              "lun": 4,
              "vhd": {
                "Uri": "[variables('dataDisk4VhdName')]"
              },
              "createOption": "Empty"
            },
            {
              "name": "datadisk5",
              "diskSizeGB": "[parameters('sizeOfEachDataDiskInGB')]",
              "lun": 5,
              "vhd": {
                "Uri": "[variables('dataDisk5VhdName')]"
              },
              "createOption": "Empty"
            },
            {
              "name": "datadisk6",
              "diskSizeGB": "[parameters('sizeOfEachDataDiskInGB')]",
              "lun": 6,
              "vhd": {
                "Uri": "[variables('dataDisk6VhdName')]"
              },
              "createOption": "Empty"
            },
            {
              "name": "datadisk7",
              "diskSizeGB": "[parameters('sizeOfEachDataDiskInGB')]",
              "lun": 7,
              "vhd": {
                "Uri": "[variables('dataDisk7VhdName')]"
              },
              "createOption": "Empty"
            },
            {
              "name": "datadisk8",
              "diskSizeGB": "[parameters('sizeOfEachDataDiskInGB')]",
              "lun": 8,
              "vhd": {
                "Uri": "[variables('dataDisk8VhdName')]"
              },
              "createOption": "Empty"
            },
            {
              "name": "datadisk9",
              "diskSizeGB": "[parameters('sizeOfEachDataDiskInGB')]",
              "lun": 9,
              "vhd": {
                "Uri": "[variables('dataDisk9VhdName')]"
              },
              "createOption": "Empty"
            },
            {
              "name": "datadisk10",
              "diskSizeGB": "[parameters('sizeOfEachDataDiskInGB')]",
              "lun": 10,
              "vhd": {
                "Uri": "[variables('dataDisk10VhdName')]"
              },
              "createOption": "Empty"
            },
            {
              "name": "datadisk11",
              "diskSizeGB": "[parameters('sizeOfEachDataDiskInGB')]",
              "lun": 11,
              "vhd": {
                "Uri": "[variables('dataDisk11VhdName')]"
              },
              "createOption": "Empty"
            },
            {
              "name": "datadisk12",
              "diskSizeGB": "[parameters('sizeOfEachDataDiskInGB')]",
              "lun": 12,
              "vhd": {
                "Uri": "[variables('dataDisk12VhdName')]"
              },
              "createOption": "Empty"
            },
            {
              "name": "datadisk13",
              "diskSizeGB": "[parameters('sizeOfEachDataDiskInGB')]",
              "lun": 13,
              "vhd": {
                "Uri": "[variables('dataDisk13VhdName')]"
              },
              "createOption": "Empty"
            },
            {
              "name": "datadisk14",
              "diskSizeGB": "[parameters('sizeOfEachDataDiskInGB')]",
              "lun": 14,
              "vhd": {
                "Uri": "[variables('dataDisk14VhdName')]"
              },
              "createOption": "Empty"
            }
          ]

        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },

        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat('http://',variables('CreateStorageAccountName'),'.blob.core.windows.net')]"
          }
        }
      },
        "resources": [
            
        ]
    },

    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/', variables('DscExtensionName'))]",
      "apiVersion": "2015-05-01-preview",
      "location": "[variables('location')]",
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.8",
        "settings": {
          "ModulesUrl": "[parameters('modulesUrl')]",
          "SasToken": "",
          "ConfigurationFunction": "[variables('configurationFunction')]",
          "Properties": {
            "MachineName": "[variables('vmName')]"

          }
        },
        "protectedSettings": null
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('CreateStorageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ]
    }

  ]
    }