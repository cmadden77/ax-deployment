{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "userImageStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "This is the name of the your storage account"
      }
    },
    "workspaceId": {
      "type": "string",
      "metadata": {
        "description": "OMS workspace ID"
      }
    },
    "workspaceKey": {
      "type": "string",
      "metadata": {
        "description": "OMS workspace ID"
      }
    },
    "osDiskVhdUri": {
      "type": "string",
      "defaultValue": "https://us4prodclientsarmaxvms.blob.core.windows.net/images/images/SQL-US4-PROD-2015-11-17-os-2015-11-17.vhd",
      "metadata": {
        "description": "Uri of the your user image"
      }
    },

    "osDiskVhdUri1": {
      "type": "string",
      "defaultValue": "https://us4prodclientsarmaxvms.blob.core.windows.net/images/images/Server-US4-PROD-2015-11-17-os-2015-11-17.vhd",
      "metadata": {
        "description": "Uri of the your user image"
      }
    },
    "DataDisk0VhdUri": {
      "type": "string",
      "defaultValue": "https://us4prodclientsarmaxvms.blob.core.windows.net/images/images/SQL-US4-PROD-2015-11-17-datadisk-0-2015-11-17.vhd",
      "metadata": {
        "description": "Uri of the your user data disk 0 image"
      }
    },
    "domainUsername": {
      "type": "string",
      "metadata": {
        "description": "Username of the account on the domain"
      }
    },
    "domainPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password of the account on the domain"
      }
    },
    "adminUserName": {
      "type": "string",
      "metadata": {
        "description": "UserName for the Virtual Machine"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine"
      }
    },
    "sizeOfEachDataDiskInGB": {
      "type": "string",
      "metadata": {
        "description": "There will be 32 data disks created of this size and then striped. The total capacity will be 32x whatever you specify here"
      }
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "This is the size of your VM"
      }
    },
    "SQLStoragePool": {
      "type": "string",
      "metadata": {
        "description": "URL for the SQL Data powershell script configuration module. "
      }
    },
    "CreateStorageAccountType": {
      "type": "string",
      "metadata": {
        "description": "Type of Storage account to be created. "
      }
    },
    "datacenterCode": {
      "type": "string",
      "defaultValue": "us4",
      "allowedValues": [
        "us1",
        "us2",
        "us3",
        "us4",
        "as1",
        "eu1",
        "eu2"
      ],
      "metadata": {
        "description": "Specify the Datacenter code"
      }
    },
    "envCode": {
      "type": "string",
      "defaultValue": "prod",
      "allowedValues": [
        "prod",
        "uat",
        "c1",
        "dev"
      ],
      "metadata": {
        "description": "Specify the environment code"
      }
    },

    "ClientCode": {
      "type": "string",
      "metadata": {
        "description": "Specify the Client code"
      }
    },
    "ClientShortName": {
      "type": "string",
      "defaultValue": "test01",

      "metadata": {
        "description": "Specify the Client code"
      }
    },
    "currentDate": {
      "type": "string",
      "defaultValue": "16-04-20",

      "metadata": {
        "description": "current date in the format %Y-%m-%d"
      }
    },
    "subnetId": {
      "type": "string",

      "metadata": {
        "description": "New Network Subnet ID e.g. ax-soros-subnet"
      }
    }

  },
  "variables": {
    "location": "[resourceGroup().location]",
    "vmName": "[concat('AX-',parameters('ClientShortName'),'-DB-',parameters('clientcode'))]",
    "vmName1": "[concat(parameters('ClientShortName'),'-',parameters('envCode'),'-',parameters('clientcode'))]",
    "DomaintoJoin": "ad.axioma.com",
    "ouPath": "OU=Customers; DC=ad; DC=axioma; DC=com",
    "domainJoinOptions": "3",
    "publicIPAddressName": "[concat(variables('vmName'),'PublicIP')]",
    "publicIPAddressName1": "[concat(variables('vmName1'),'PublicIP')]",
    "existingVNETName": "MGMTVNET",
    "existingSubnetName": "MGMTSubnet,",
    "nicName": "[concat(variables('vmName'),'NIC')]",
    "nicName1": "[concat(variables('vmName1'),'NIC')]",
    "publicIPAddressType": "Dynamic",
    "dnsLabelPrefix": "[concat('ax-',parameters('envCode'),'-db-',parameters('clientcode'))]",
    "dnsLabelPrefix1": "[concat('axioma-',parameters('ClientShortName'),'-',parameters('envCode'),'-',parameters('clientcode'))]",
    "vnetID": "[resourceId('ax-mgmt-dc', 'Microsoft.Network/virtualNetworks', variables('existingVNETName'))]",
    "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetId'))]",
    "osDiskVhdName": "[concat('http://',parameters('userImageStorageAccountName'),'.blob.core.windows.net/vhds/',variables('vmName'),parameters('currentdate'),'-OS.vhd')]",
    "DataDisk0VhdName": "[concat('http://',parameters('userImageStorageAccountName'),'.blob.core.windows.net/vhds/',variables('vmName'),parameters('currentdate'),'-DataDisk-0.vhd')]",
    "osDiskVhdName1": "[concat('http://',parameters('userImageStorageAccountName'),'.blob.core.windows.net/vhds/',variables('vmName1'),parameters('currentdate'),'-OS.vhd')]",
    "apiVersion": "2015-06-15",
    "MalwareTemplate": "https://raw.githubusercontent.com/cmadden77/ax-deployment/master/malware.json",
    "NetworkSecurityGroupTemplate": "https://raw.githubusercontent.com/cmadden77/ax-deployment/master/NetworkSecurityGroup.json",
    "networkSecurityGroupName": "[concat('AX-',parameters('ClientShortName'),'-',parameters('clientcode'),'-NSG')]",
    "ScriptStorageAccountName": "us4prodclientsarmaxvms",
    "ScriptFileToRun": "configure-sqlstorage.ps1",
    "ScriptStorageAccountResourceGroup": "ax-mgmt-dc",
    "accountid": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',variables('ScriptStorageAccountResourceGroup'),'/providers/','Microsoft.Storage/storageAccounts/', variables('ScriptStorageAccountName'))]",
    "commandToExecute": "[concat('powershell.exe -File', ' ', variables('ScriptFileToRun'),' ','-NumberOfDisksInLogPool',' ',variables('NumberOfDisksInLogPool'),' ','-NumberOfDisksInDataPool',' ',variables('NumberOfDisksInDataPool'))]",
    "NumberOfDisksInLogPool": "2",
    "NumberOfDisksInDataPool": "2",
    "configurationFunction": "SQLStoragePool.ps1\\SQLStoragePool",
    "DscExtensionName": "DscExtension",
    "vmExtensionName": "Malware",
    "dataDisk1VhdName": "[concat('http://',variables('CreateStorageAccountName'),'.blob.core.windows.net/vhds/',variables('vmName'),'dataDisk1.vhd')]",
    "dataDisk2VhdName": "[concat('http://',variables('CreateStorageAccountName'),'.blob.core.windows.net/vhds/',variables('vmName'),'dataDisk2.vhd')]",
    "dataDisk3VhdName": "[concat('http://',variables('CreateStorageAccountName'),'.blob.core.windows.net/vhds/',variables('vmName'),'dataDisk3.vhd')]",
    "dataDisk4VhdName": "[concat('http://',variables('CreateStorageAccountName'),'.blob.core.windows.net/vhds/',variables('vmName'),'dataDisk4.vhd')]",
    "dataDisk5VhdName": "[concat('http://',variables('CreateStorageAccountName'),'.blob.core.windows.net/vhds/',variables('vmName'),'dataDisk5.vhd')]",
    "CreateStorageAccountName": "[concat(parameters('datacenterCode'),parameters('envCode'),'axioma',parameters('ClientCode'),'arm')]",
    "minisubnetprefix": "10.254.5.0/24"
  },
  "resources": [
    {
      "name": "[variables('CreateStorageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [ ],
      "tags": {
        "displayName": "CreateStorageAccount"
      },
      "properties": {
        "accountType": "[parameters('CreateStorageAccountType')]"
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsLabelPrefix')]"
        }
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName1')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsLabelPrefix1')]"
        }
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName1')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName1'))]",
        "Microsoft.Resources/deployments/NetworkSecurityGroup"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName1'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        }
      }
    },
    {
      "apiVersion": "2016-02-01",
      "name": "NetworkSecurityGroup",
      "type": "Microsoft.Resources/deployments",

      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "https://raw.githubusercontent.com/cmadden77/ax-deployment/master/NetworkSecurityGroup.json",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "ClientShortName": { "value": "[parameters('ClientShortName')]" },
          "Clientcode": { "value": "[parameters('ClientCode')]" }
        }
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName1')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName1'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('CreateStorageAccountName'))]"
      ],
      "properties": {
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat('http://',variables('CreateStorageAccountName'),'.blob.core.windows.net')]"
          }
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName1')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "osDisk": {
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "image": {
              "uri": "[parameters('osDiskVhdUri1')]"
            },
            "name": "[concat(variables('vmName1'),'-osDisk')]",
            "osType": "Windows",
            "vhd": {
              "uri": "[variables('osDiskVhdName1')]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName1'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "[variables('apiVersion')]",
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(variables('vmName1'),'/joindomain')]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', variables('vmName1'))]"
          ],
          "properties": {
            "protectedsettings": {
              "Password": "[parameters('domainPassword')]"
            },
            "publisher": "Microsoft.Compute",
            "settings": {
              "Name": "[variables('domainToJoin')]",
              "OUPath": "[variables('ouPath')]",
              "User": "[concat(variables('domainToJoin'),'\\', parameters('domainUsername'))]",
              "Restart": "true",
              "Options": "[variables('domainJoinOptions')]"
            },
            "type": "JsonADDomainExtension",
            "typeHandlerVersion": "1.0"
          }
        },
        {
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(variables('vmName1'),'/','Antimalware')]",
          "apiVersion": "2015-05-01-preview",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', variables('vmName1'))]",
            "[concat('Microsoft.Compute/virtualMachines/', variables('vmName1'),'/extensions/joindomain')]"
          ],
          "properties": {
            "publisher": "Microsoft.Azure.Security",
            "type": "IaaSAntimalware",
            "typeHandlerVersion": "1.1",
            "settings": {
              "AntimalwareEnabled": "true",
              "Exclusions": {
                "Paths": "f:\\sysvol\\;f:\\ntds\\;",
                "Extensions": ".mdf;.ldf;.ndf;.bak;.trn;.edb;.sdb;.chk;.jrs;.pol;.dit",
                "Processes": "sqlserver.exe;ReportingServicesService.exe;MSMDSrv.exe"
              },
              "RealtimeProtectionEnabled": "true",
              "ScheduledScanSettings": {
                "isEnabled": "true",
                "scanType": "Quick",
                "day": "7",
                "time": "120"
              }
            },
            "protectedSettings": null
          }
        },
        {
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(variables('vmName1'), '/Microsoft.EnterpriseCloud.Monitoring')]",
          "apiVersion": "2015-06-15",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', variables('vmName1'))]",
            "[concat('Microsoft.Compute/virtualMachines/', variables('vmName1'),'/extensions/AntiMalware')]"
          ],
          "properties": {
            "publisher": "Microsoft.EnterpriseCloud.Monitoring",
            "type": "MicrosoftMonitoringAgent",
            "typeHandlerVersion": "1.0",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "workspaceId": "[parameters('workspaceId')]"
            },
            "protectedSettings": {
              "workspaceKey": "[parameters('workspaceKey')]"
            }
          }
        }
      ]

    }
  ]
}
